<apex:page id="FFM_ShowPassword" showHeader="false" sidebar="false">
	<head>
		<title>Password</title>
	</head>
	<body>
	<apex:form id="FFM_ShowPasswordForm">
		<div id="timerDiv" style="display: none;">Window will be closed in <span id="time"></span></div>
        <div id="initialSetupDiv" style="display: none;">Please do initial set up first on this page: </div>
		<div id="errorMessage" style="display: none; color:red;"></div>
		<apex:pageBlock id="pbPassword">
		<apex:inputText id="tbPassword" styleClass="margin-right: 4px; margin-top: -1px;"/>
		<apex:commandButton value="Save" id="saveButton" onclick="SavePassword();return false;" style="display: none;"/>
		</apex:pageBlock>
	    <script src="/soap/ajax/37.0/connection.js" type="text/javascript"></script>
		<script src="/soap/ajax/37.0/apex.js" type="text/javascript"></script>
		<script type="text/javascript">
			window.onload = function(){
				var loginId = QueryString.loginId;
				sforce.connection.sessionId = '{!$Api.Session_ID}';
                var setValue = sforce.apex.execute("FF_Maestro_Test/FFM_LoginAccessor","checkSettingsValue", {});
                if(setValue[0] == 'true'){
                    var initialSetupDiv = document.getElementById('initialSetupDiv');
                    initialSetupDiv.innerHTML = initialSetupDiv.innerHTML + window.location.href.substr(0, window.location.href.indexOf(window.location.pathname)) + "/apex/FF_Maestro_Test__FFM_InitialSetup";
                    initialSetupDiv.style.display = 'inline-block';
                }
                else{
                    var result = sforce.apex.execute("FF_Maestro_Test/FFM_LoginAccessor","getPasswordService",{loginId:loginId, application:'Salesforce'});
                    var elemTxtName = document.getElementById('{!$Component.pbPassword.tbPassword}');
                    if(result[0] == 'true'){
                        elemTxtName.value = result[1];
                        elemTxtName.select();
                    }
                    else{
                        var errorMessageDiv = document.getElementById('errorMessage');
                        errorMessageDiv.innerText = result[1];
                        errorMessageDiv.style.display = 'block';
                    }
                    var hasEditPermissions = sforce.apex.execute("FF_Maestro_Test/FFM_LoginAccessor","userCanUpdatePassword", {loginId:loginId});
                    var btnElem = document.getElementById('{!$Component.pbPassword.saveButton}');
                    if(hasEditPermissions[0] == "false")
                    {
                        btnElem.style.display = 'none';
                        var time = '{!$Setup.FF_Maestro_Test__FFM_Settings__c.FF_Maestro_Test__FFM_ShowPasswordTimeout__c}' || 5000;
                        var display = document.querySelector('#time');
                        var timerDiv = document.getElementById('timerDiv');
                        timerDiv.style.display = 'inline-block';
                        startTimer(time / 1000, display);
                    }
                    else
                    {
                        btnElem.style.display = 'inline-block';
                    }
                }
			}

			var QueryString = function () {
		  	// This function is anonymous, is executed immediately and 
		  	// the return value is assigned to QueryString!
		  	var query_string = {};
		  	var query = window.location.search.substring(1);
		  	var vars = query.split("&");
		  	for (var i=0;i<vars.length;i++) {
		    	var pair = vars[i].split("=");
		        // If first entry with this name
		    	if (typeof query_string[pair[0]] === "undefined") {
		      		query_string[pair[0]] = decodeURIComponent(pair[1]);
		        	// If second entry with this name
		    	} else if (typeof query_string[pair[0]] === "string") {
		      		var arr = [ query_string[pair[0]],decodeURIComponent(pair[1]) ];
		      		query_string[pair[0]] = arr;
		        	// If third or later entry with this name
		    	} else {
		      		query_string[pair[0]].push(decodeURIComponent(pair[1]));
		    	}
		  	} 
		  	return query_string;
			}();

			function SavePassword(){
				var elemTxtName = document.getElementById('{!$Component.pbPassword.tbPassword}');
				var loginId = QueryString.loginId;
				sforce.connection.sessionId = '{!$Api.Session_ID}';
                sforce.apex.execute("FF_Maestro_Test/FFM_LoginAccessor","updatePasswordService",{loginId: loginId, newPassword: elemTxtName.value});
				this.close();
			}

			function startTimer(duration, display) {
			    var timer = duration, minutes, seconds;
			    setInterval(function () {
			        minutes = parseInt(timer / 60, 10)
			        seconds = parseInt(timer % 60, 10);

			        minutes = minutes < 10 ? "0" + minutes : minutes;
			        seconds = seconds < 10 ? "0" + seconds : seconds;

			        display.textContent = minutes + ":" + seconds;

			        if (--timer < 0) {
			            timer = duration;
			            self.close()
			        }
			    }, 1000);
			}
		</script>
	</apex:form>
	</body>
</apex:page>